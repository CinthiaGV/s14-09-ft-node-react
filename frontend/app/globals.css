@tailwind base;
@tailwind components;
@tailwind utilities;



@media (prefers-color-scheme: dark) {
  :root {
    --curve-size: 0.4rem;
    --bgColor: rgba(35, 34, 34, 1)
  }
} 

body {
  background-color: var(--bgColor);
  font-family: 'Chakra Petch', sans-serif;
  padding: 0px;
}


@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

input:focus{
  border:none
}

@layer components {
  .polygon {
    clip-path: polygon(
      var(--curve-size) 0,
      calc(100% - var(--curve-size)) 0,
      100% var(--curve-size),
      calc(100% - var(--curve-size)) 100%,
      var(--curve-size) 100%,
      0 calc(100% - var(--curve-size))
  );
}

/*.parallelogram-container {
  position: relative;
  height: 1.25rem;
}

.parallelogram {
  height: 1.25rem;
  clip-path: polygon(0% 0%, 75% 0%, 100% 100%, 25% 100%);
  background: rgb(23, 150, 208);
}

.small-parallelogram {
  position: absolute;
  background: white;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  clip-path: polygon(2% 2%, 73% 2%, 98% 98%, 27% 98%);
}*/

/*.border-polygon {
  mask: polygon(
    var(--curve-size) 0,
    calc(100% - var(--curve-size)) 0,
    100% var(--curve-size),
    calc(100% - var(--curve-size)) 100%,
    var(--curve-size) 100%,
    0 calc(100% - var(--curve-size))
  );
  outline: 2px solid black; Cambia el grosor y el color del borde seg√∫n sea necesario
}*/

.btn {
  cursor: pointer;
  font-size: 1.25rem;
  /* use position: relative; so that BG is only for .btn */
  position: relative;
  isolation: isolate;
  display: inline-grid;
  place-content: center;
  padding: 0.5em 1.5em;
  transition: color 250ms;
}

.yellowBtn {
  @apply btn bg-yellow font-semibold text-black polygon glitch;
}

.grayBtn {
  @apply btn bg-gray font-semibold text-white polygon glitch;
}

.glassmorphism {
  @apply backdrop-filter backdrop-blur-md bg-gray-60 bg-opacity-60;
}



.glitch::after {
  padding: 10px 50px;
  font-size: 20px;
  border: none;
  border-radius: 5px;
  color: white;
  background-color: transparent;
  position: relative;
}

.glitch::after {
  --move1: inset(50% 50% 50% 50%);
  --move2: inset(31% 0 40% 0);
  --move3: inset(39% 0 15% 0);
  --move4: inset(45% 0 40% 0);
  --move5: inset(45% 0 6% 0);
  --move6: inset(14% 0 61% 0);
  clip-path: var(--move1);
  content: 'NOA';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: block;
}

.glitch:hover::after {
  animation: glitch_4011 1s;
  text-shadow: 10 10px 10px black;
  animation-timing-function: steps(2, end);
  text-shadow: -3px -3px 0px #1df2f0, 3px 3px 0px #E94BE8;
  background-color: transparent;
  /*border: 3px solid rgb(0, 255, 213);*/
}

.glitch:hover {
  text-shadow: -1px -1px 0px #1df2f0, 1px 1px 0px #E94BE8;
  color:aliceblue;
}

.glitch:hover {
  background-color: transparent;
  /*border: 1px solid rgb(0, 255, 213);*/
  box-shadow: 0px 10px 10px -10px rgb(0, 255, 213);
}

@keyframes glitch_4011 {
  0% {
    clip-path: var(--move1);
    transform: translate(0px,-10px);
  }

  10% {
    clip-path: var(--move2);
    transform: translate(-10px,10px);
  }

  20% {
    clip-path: var(--move3);
    transform: translate(10px,0px);
  }

  30% {
    clip-path: var(--move4);
    transform: translate(-10px,10px);
  }

  40% {
    clip-path: var(--move5);
    transform: translate(10px,-10px);
  }

  50% {
    clip-path: var(--move6);
    transform: translate(-10px,10px);
  }

  60% {
    clip-path: var(--move1);
    transform: translate(10px,-10px);
  }

  70% {
    clip-path: var(--move3);
    transform: translate(-10px,10px);
  }

  80% {
    clip-path: var(--move2);
    transform: translate(10px,-10px);
  }

  90% {
    clip-path: var(--move4);
    transform: translate(-10px,10px);
  }

  100% {
    clip-path: var(--move1);
    transform: translate(0);
  }
}




}